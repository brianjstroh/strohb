AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation Template for a public static s3 website
Parameters:
  DomainName:
    Type: String
    Description: |
      domain name, without www, etc. Must be registered via AWS Route 53 (e.g. bstroh.com)
Resources:
  MyS3WebsiteLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${DomainName}-logs
  MyS3WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      LoggingConfiguration:
        DestinationBucketName: !Ref MyS3WebsiteLogBucket
        LogFilePrefix: access_logs/
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
  S3WebsiteBucketGetObjectPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MyS3WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${MyS3WebsiteBucket}/*
          - Effect: Allow # for github actions pipeline
            Principal:
              AWS: !GetAtt MyS3WebsiteFullAccessUser.Arn
            Action: "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${MyS3WebsiteBucket}
              - !Sub arn:aws:s3:::${MyS3WebsiteBucket}/*
  MyS3WebsiteFullAccessUser: # for github actions pipeline
    Type: AWS::IAM::User

# The below section is for an optimal user experience when interacting with the website
# trust me, without CloudFront and everything that comes with it, your experience will
# not be fun.
  SiteCertificate: # allows for https access
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      ValidationMethod: EMAIL
      SubjectAlternativeNames:
        - !Sub "*.${DomainName}"
  SiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt MyS3WebsiteBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
          - !Sub www.${DomainName}
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        ViewerCertificate:
          AcmCertificateArn: !Ref SiteCertificate
          SslSupportMethod: sni-only
  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref DomainName
  DomainRecordSet:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZone
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Constant for all CloudFront distributions
            DNSName: !GetAtt SiteDistribution.DomainName
        - Name: !Sub www.${DomainName}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # Constant for all CloudFront distributions
            DNSName: !GetAtt SiteDistribution.DomainName
Outputs:
  BucketName:
    Description: Name of the S3 bucket
    Value: !Ref MyS3WebsiteBucket
  DistributionDomainName:
    Description: The domain name of the CloudFront distribution
    Value: !GetAtt SiteDistribution.DomainName
  HostedZoneId:
    Description: The ID of the created Route 53 hosted zone
    Value: !Ref HostedZone
